dnl ---------------------------------------------------------------------
dnl Process this file with autoconf to produce a configure script.

AC_INIT(amsn)
AC_CONFIG_HEADER(utils/linux/capture/config.h)


APPNAME=amsn
APPVERSION=0.95cvs


AC_SUBST(APPVERSION)
AC_SUBST(APPNAME)

dnl ---------------------------------------------------------------------
dnl compile time options

AC_ARG_ENABLE(libng,
  [  --disable-libng         disable use of libng library])

dnl ---------------------------------------------------------------------
dnl Checks for programs.

AC_PROG_CC
AC_PROG_CXX
AC_PROG_CPP


dnl ---------------------------------------------------------------------
dnl Checks for TCL and TK.

AC_PREFIX_PROGRAM(wish)

TCLSH=`which tclsh`
VERSION=`echo "puts $::tcl_version ; exit" | ${TCLSH}`
AC_ARG_ENABLE(version-check, [  --disable-version-check Disable checking that linked tcl/tk version is the same version that bin program tclsh ],    [version_ok=$enableval], [version_ok=yes])

BUILD_DIR=`pwd`
cd ${srcdir}
TOP_DIR=`pwd`
LIBDIR=`pwd`
cd "${BUILD_DIR}"

AC_SUBST(TCLSH)
AC_SUBST(TOP_DIR)
AC_SUBST(LIBDIR)
AC_SUBST(BUILD_DIR)


#--------------------------------------------------------------------
#	Read in configuration information generated by Tcl for shared
#	libraries, and arrange for it to be substituted into our
#	Makefile.
#--------------------------------------------------------------------

AC_MSG_CHECKING(tcl build dir)
TCL_LIB_DIR=$exec_prefix/lib
dirs="	/usr/lib/tcl8.4a* \
	/usr/local/lib/tcl8.4a* \
	/usr/lib/tcl8.4b* \
	/usr/local/lib/tcl8.4b* \
	/usr/lib/tcl8.4 \
	/usr/lib/tcl8.4.* \
	/usr/local/lib/tcl8.4 \
	/usr/local/lib/tcl8.4.* \
	/usr/lib/tcl8.5 \
	/usr/lib/tcl8.5.* \
	/usr/local/lib/tcl8.5 \
	/usr/local/lib/tcl8.5.* \
	/Library/Frameworks/Tcl.framework \
	/Library/Frameworks/Tcl.framework/Versions/8.3 \
	/Library/Frameworks/Tcl.framework/Versions/8.4 \
	/Library/Frameworks/Tcl.framework/Versions/8.5 \
	/usr/local/lib \
	/usr/lib \
	/usr/local/lib64 \
	/usr/lib64 \
	/usr/lib64/tcl8.4a* \
	/usr/local/lib64/tcl8.4a* \
	/usr/lib64/tcl8.4b* \
	/usr/local/lib64/tcl8.4b* \
	/usr/lib64/tcl8.4 \
	/usr/lib64/tcl8.4.* \
	/usr/local/lib64/tcl8.4 \
	/usr/local/lib64/tcl8.4.* \
	/usr/lib64/tcl8.5 \
	/usr/lib64/tcl8.5.* \
	/usr/local/lib64/tcl8.5 \
	/usr/local/lib64/tcl8.5.* \
	`locate tclConfig.sh`"

for i in $dirs ; do

    if test -f "$i"; then
        i=`dirname $i`
    fi

    if test -d "$i" -a -f "$i/tclConfig.sh"; then
	file=$i/tclConfig.sh
	. $file

	if test "x${version_ok}" != "xyes"; then
	   VERSION=${TCL_VERSION}
	fi

        if  test "x${TCL_INC_DIR}" != "x" -o "x${TCL_INC_SPEC}" != "x" \
            -o "x${TCL_INCLUDE_DIR}" != "x" -o "x${TCL_INCLUDE_SPEC}" != "x"; then
	    if test "x${TCL_VERSION}" == "x${VERSION}" ; then
	       TCL_LIB_DIR=`cd $i; pwd`
	       break;
	    fi
	elif test -f ${TCL_PREFIX}/include/tcl.h; then
	    TCL_LIB_DIR=`cd $i; pwd`
	    break;
	fi

    fi

done
AC_ARG_WITH(tcl, [  --with-tcl=DIR          use Tcl binaries from DIR], TCL_LIB_DIR=$withval,)
if test -d $TCL_LIB_DIR; then
    AC_MSG_RESULT([using tcl library in $TCL_LIB_DIR])
else
    AC_MSG_ERROR(Unable to find Tcl directory or Tcl package is not tcl-dev)
fi

cd ${TCL_LIB_DIR}/..
TCL_TOP_DIR=`pwd`
cd "${BUILD_DIR}"

#--------------------------------------------------------------------

file=$TCL_LIB_DIR/tclConfig.sh
. $file
#CC=$TCL_CC
#CXX=$TCL_CXX
SHLIB_CFLAGS=`echo "$TCL_SHLIB_CFLAGS" |sed -e "s|PIC|pic|" -e "s|+Z|+z|"`
SHLIB_LD=$TCL_SHLIB_LD
SHLIB_SUFFIX=$TCL_SHLIB_SUFFIX
DL_LIBS=$TCL_DL_LIBS
#LD_FLAGS=$TCL_LD_FLAGS

TCL_BASE=`echo ${TCL_LIB_SPEC} |sed -e "s|^.*-l||"`
TCL_STUB_BASE=`echo ${TCL_STUB_LIB_SPEC} |sed -e "s|^.*-l||"`

AC_SUBST(TCL_LIB_DIR)

if test "x${TCL_INC_SPEC}" != "x" ; then
   TCL_INC_DIR=$TCL_INC_SPEC
fi


if  test "x${TCL_INCLUDE_SPEC}" != "x"; then
   TCL_INC_DIR=$TCL_INCLUDE_SPEC
fi

if test "x${TCL_INC_DIR}" == "x"; then
   TCL_INC_DIR=$TCL_INCLUDE_DIR
fi

if test "x${TCL_INC_DIR}" == "x" -a -f ${TCL_PREFIX}/include/tcl.h; then
   TCL_INC_DIR=${TCL_PREFIX}/include
fi

if test "x${TCL_INC_DIR}" == "x"; then
   AC_MSG_ERROR(You dot not have a devel package of Tcl)
fi

case $TCL_INC_DIR in
     -I*) ;;
     *) TCL_INC_DIR=-I$TCL_INC_DIR;;
esac

TCL_INC_SPEC=$TCL_INC_DIR

AC_SUBST(TCL_INC_SPEC)

framework=`echo "${TCL_BASE}" | grep -- "-framework"`
if test "x${framework}" == "x"; then
   TCL_LIB_SPEC="-L${TCL_LIB_DIR} -l${TCL_BASE}"
fi
TCL_STUB_LIB_SPEC="-L${TCL_LIB_DIR} -l${TCL_STUB_BASE}"
eval "TCL_UNSHARED_LIB_FILE=lib${TCL_BASE}${TCL_UNSHARED_LIB_SUFFIX}"
eval "TCL_SHARED_LIB_FILE=lib${TCL_BASE}${TCL_SHARED_LIB_SUFFIX}"

#--------------------------------------------------------------------
#	Read in configuration information generated by TK, and 
#	arrange for it to be substituted into our Makefile.
#--------------------------------------------------------------------

AC_MSG_CHECKING(tk build dir)
TK_LIB_DIR=$prefix/lib
if test -f "${TCL_LIB_DIR}/tkConfig.sh"; then
    TK_LIB_DIR=$TCL_LIB_DIR
else
    TK_LIB_DIR=$prefix/lib
    dirs="/usr/lib/tk8.4a* \
	/usr/local/lib/tk8.4a* \
	/usr/lib/tk8.4b* \
	/usr/local/lib/tk8.4b* \
	/usr/lib/tk8.4 \
	/usr/lib/tk8.4.* \
	/usr/local/lib/tk8.4 \
	/usr/local/lib/tk8.4.* \
	/usr/lib/tk8.5 \
	/usr/lib/tk8.5.* \
	/usr/local/lib/tk8.5 \
	/usr/local/lib/tk8.5.* \
	/Library/Frameworks/Tk.framework \
	/Library/Frameworks/Tk.framework/Versions/8.3 \
	/Library/Frameworks/Tk.framework/Versions/8.4 \
	/Library/Frameworks/Tk.framework/Versions/8.5 \
	/usr/local/lib \
	/usr/lib \
	/usr/local/lib64 \
	/usr/lib64 \
	/usr/lib64/tk8.4a* \
	/usr/local/lib64/tk8.4a* \
	/usr/lib64/tk8.4b* \
	/usr/local/lib64/tk8.4b* \
	/usr/lib64/tk8.4 \
	/usr/lib64/tk8.4.* \
	/usr/local/lib64/tk8.4 \
	/usr/local/lib64/tk8.4.* \
	/usr/lib64/tk8.5 \
	/usr/lib64/tk8.5.* \
	/usr/local/lib64/tk8.5 \
	/usr/local/lib64/tk8.5.* \
	`locate tkConfig.sh`"


    for i in $dirs ; do

	if test -f "$i"; then
	   i=`dirname $i`
	fi

	if test -d "$i" -a -f "$i/tkConfig.sh"; then
	   file=$i/tkConfig.sh
	   . $file

	   if test "x${version_ok}" != "xyes"; then
	      VERSION=${TK_VERSION}
	   fi

	   if  test "x${TK_INC_DIR}" != "x" -o "x${TK_INC_SPEC}" != "x" \
            -o "x${TK_INCLUDE_DIR}" != "x" -o "x${TK_INCLUDE_SPEC}" != "x"; then
	        if test "x${TK_VERSION}" == "x${VERSION}"; then
		   TK_LIB_DIR=`cd $i; pwd`
		   break;
		fi
	   elif test -f ${TK_PREFIX}/include/tk.h; then
		TK_LIB_DIR=`cd $i; pwd`
		break;
	   fi
	fi

    done

fi
AC_ARG_WITH(tk, [  --with-tk=DIR           use Tk binaries from DIR], TK_LIB_DIR=$withval,)
if test -d $TK_LIB_DIR; then
    AC_MSG_RESULT([using tk library in $TK_LIB_DIR])
else
    AC_MSG_ERROR(Unable to find Tk directory or Tk package is not tk-dev)
fi

cd ${TK_LIB_DIR}/..
TK_TOP_DIR=`pwd`
cd "${BUILD_DIR}"

file=$TK_LIB_DIR/tkConfig.sh
. $file
AC_SUBST(TK_VERSION)
AC_SUBST(TK_LIB)
AC_SUBST(TK_LIBS)

AC_SUBST(TK_LIB_DIR)

if test "x${TK_INC_SPEC}" != "x" ; then
   TK_INC_DIR=$TK_INC_SPEC
fi

if  test "x${TK_INCLUDE_SPEC}" != "x"; then
   TK_INC_DIR=$TK_INCLUDE_SPEC
fi

if test "x${TK_INC_DIR}" == "x"; then
   TK_INC_DIR=$TK_INCLUDE_DIR
fi

if test "x${TK_INC_DIR}" == "x" -a -f ${TK_PREFIX}/include/tk.h; then
   TK_INC_DIR=${TK_PREFIX}/include
fi

if test "x${TK_INC_DIR}" == "x"; then
   AC_MSG_ERROR(You dot not have a devel package of Tk)
fi

case $TK_INC_DIR in
     -I*) ;;
     *) TK_INC_DIR=-I$TK_INC_DIR;;
esac

TK_INC_SPEC=$TK_INC_DIR

AC_SUBST(TK_INC_SPEC)

AC_SUBST(TCL_STUB_LIB_SPEC)
AC_SUBST(TK_STUB_LIB_SPEC)


dnl ---------------------------------------------------------------------
dnl do some OS specific stuff here

dnl Check for libstdc++
AC_CHECK_LIB(stdc++,main,CXX_LIB="-lstdc++", AC_MSG_ERROR(stdc++ library not found) )
AC_SUBST(CXX_LIB)

AC_SUBST(LDLIBS)
AC_SUBST(USE_LIBNG)
AC_SUBST(FOUND_X11)
AC_SUBST(FOUND_OS)
AC_SUBST(FOUND_IMLIB)
FOUND_X11="no"
FOUND_IMLIB="no"

if test "$enable_libng" != "no" ; then
    USE_LIBNG="yes"
else
    USE_LIBNG="no" 
fi


dnl Check for X11

AC_PATH_XTRA
if test "$no_x" != "yes"; then
  FOUND_X11="yes"
else
   AC_MSG_RESULT("Could not find X11 devel package, traydock will not be compiled")
fi


dnl Check if Imlib is installed properly

AC_ARG_WITH(imlib-prefix,
[  --with-imlib-prefix=PFX   Prefix where IMLIB is installed (optional)],
            imlib_prefix="$withval", imlib_prefix="")
AC_ARG_WITH(imlib-exec-prefix,
[  --with-imlib-exec-prefix=PFX Exec prefix where IMLIB is installed (optional)],
            imlib_exec_prefix="$withval", imlib_exec_prefix="")
AC_ARG_ENABLE(imlibtest,
[  --disable-imlibtest       Do not try to compile and run a test IMLIB program],
	      [], enable_imlibtest=yes)

  if test x$imlib_exec_prefix != x ; then
     imlib_args="$imlib_args --exec-prefix=$imlib_exec_prefix"
     if test x${IMLIB_CONFIG+set} != xset ; then
        IMLIB_CONFIG=$imlib_exec_prefix/bin/imlib-config
     fi
  fi
  if test x$imlib_prefix != x ; then
     imlib_args="$imlib_args --prefix=$imlib_prefix"
     if test x${IMLIB_CONFIG+set} != xset ; then
        IMLIB_CONFIG=$imlib_prefix/bin/imlib-config
     fi
  fi


# AM_PATH_IMLIB([MINIMUM-VERSION, [ACTION-IF-FOUND], [ACTION-IF-NOT-FOUND])
# -------------------------------------------------------------------------
# Test for IMLIB, and define IMLIB_CFLAGS and IMLIB_LIBS
#
  AC_PATH_PROG(IMLIB_CONFIG, imlib-config, no)
  min_imlib_version=1.8.2
  AC_MSG_CHECKING(for IMLIB - version >= $min_imlib_version)
  no_imlib=""
  if test "$IMLIB_CONFIG" = "no" ; then
    no_imlib=yes
  else
    IMLIB_CFLAGS=`$IMLIB_CONFIG $imlibconf_args --cflags`
    IMLIB_LIBS=`$IMLIB_CONFIG $imlibconf_args --libs`

    imlib_major_version=`$IMLIB_CONFIG $imlib_args --version | \
           sed 's/\([[0-9]]*\).\([[0-9]]*\).\([[0-9]]*\)/\1/'`
    imlib_minor_version=`$IMLIB_CONFIG $imlib_args --version | \
           sed 's/\([[0-9]]*\).\([[0-9]]*\).\([[0-9]]*\)/\2/'`
    imlib_micro_version=`$IMLIB_CONFIG $imlib_args --version | \
           sed 's/\([[0-9]]*\).\([[0-9]]*\).\([[0-9]]*\)/\3/'`
    if test "x$enable_imlibtest" = "xyes" ; then
      ac_save_CFLAGS="$CFLAGS"
      ac_save_LIBS="$LIBS"
      CFLAGS="$CFLAGS $IMLIB_CFLAGS"
      LIBS="$LIBS $IMLIB_LIBS"
#
# Now check if the installed IMLIB is sufficiently new. (Also sanity
# checks the results of imlib-config to some extent
#
      rm -f conf.imlibtest
      AC_TRY_RUN([
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <Imlib.h>

char*
my_strdup (char *str)
{
  char *new_str;

  if (str)
    {
      new_str = malloc ((strlen (str) + 1) * sizeof(char));
      strcpy (new_str, str);
    }
  else
    new_str = NULL;

  return new_str;
}

int main ()
{
  int major, minor, micro;
  char *tmp_version;

  system ("touch conf.imlibtest");

  /* HP/UX 9 (%@#!) writes to sscanf strings */
  tmp_version = my_strdup("$min_imlib_version");
  if (sscanf(tmp_version, "%d.%d.%d", &major, &minor, &micro) != 3) {
     printf("%s, bad version string\n", "$min_imlib_version");
     exit(1);
   }

    if (($imlib_major_version > major) ||
        (($imlib_major_version == major) && ($imlib_minor_version > minor)) ||
	(($imlib_major_version == major) && ($imlib_minor_version == minor) &&
	($imlib_micro_version >= micro)))
    {
      return 0;
    }
  else
    {
      printf("\n*** 'imlib-config --version' returned %d.%d, but the minimum version\n", $imlib_major_version, $imlib_minor_version);
      printf("*** of IMLIB required is %d.%d. If imlib-config is correct, then it is\n", major, minor);
      printf("*** best to upgrade to the required version.\n");
      printf("*** If imlib-config was wrong, set the environment variable IMLIB_CONFIG\n");
      printf("*** to point to the correct copy of imlib-config, and remove the file\n");
      printf("*** config.cache before re-running configure\n");
      return 1;
    }
}

],, no_imlib=yes,[echo $ac_n "cross compiling; assumed OK... $ac_c"])
       CFLAGS="$ac_save_CFLAGS"
       LIBS="$ac_save_LIBS"
     fi
  fi
  if test "x$no_imlib" = x ; then
     AC_MSG_RESULT(yes)
     FOUND_IMLIB="yes"
  else
     AC_MSG_RESULT(no)
     if test "$IMLIB_CONFIG" = "no" ; then
       echo "*** The imlib-config script installed by IMLIB could not be found"
       echo "*** If IMLIB was installed in PREFIX, make sure PREFIX/bin is in"
       echo "*** your path, or set the IMLIB_CONFIG environment variable to the"
       echo "*** full path to imlib-config."
     else
       if test -f conf.imlibtest ; then
        :
       else
          echo "*** Could not run IMLIB test program, checking why..."
          CFLAGS="$CFLAGS $IMLIB_CFLAGS"
          LIBS="$LIBS $IMLIB_LIBS"
          AC_TRY_LINK([
#include <stdio.h>
#include <Imlib.h>
],      [ return 0; ],
        [ echo "*** The test program compiled, but did not run. This usually means"
          echo "*** that the run-time linker is not finding IMLIB or finding the wrong"
          echo "*** version of IMLIB. If it is not finding IMLIB, you'll need to set your"
          echo "*** LD_LIBRARY_PATH environment variable, or edit /etc/ld.so.conf to point"
          echo "*** to the installed location  Also, make sure you have run ldconfig if that"
          echo "*** is required on your system"
	  echo "***"
          echo "*** If you have an old version installed, it is best to remove it, although"
          echo "*** you may also be able to get things to work by modifying LD_LIBRARY_PATH"],
        [ echo "*** The test program failed to compile or link. See the file config.log for the"
          echo "*** exact error that occured. This usually means IMLIB was incorrectly installed"
          echo "*** or that you have moved IMLIB since it was installed. In the latter case, you"
          echo "*** may want to edit the imlib-config script: $IMLIB_CONFIG" ])
          CFLAGS="$ac_save_CFLAGS"
          LIBS="$ac_save_LIBS"
       fi
     fi
     IMLIB_CFLAGS=""
     IMLIB_LIBS=""
     echo "You need to install Imlib 1.x, e.g. http://freshmeat.net/redir/imlib/4385/url_tgz/imlib-1.9.10.tar.gz"
     echo "if your distributor doesn't have a package"
     AC_MSG_RESULT([Could not find Imlib, traydock will not be compiled])
  
  fi
  AC_SUBST(IMLIB_CFLAGS)
  AC_SUBST(IMLIB_LIBS)
  rm -f conf.imlibtest


#---------------------------------------------------------------------------------------------



case "`uname -s`" in
	Linux)
		FOUND_OS="linux"
		;;
	OpenBSD | FreeBSD | NetBSD)
		# *BSD has important stuff (from ports)
		# in /usr/local ...
		CFLAGS="$CFLAGS -I/usr/local/include -L/usr/local/lib"
		LDFLAGS="$LDFLAGS -L/usr/local/lib"
		FOUND_OS="bsd"
		;;
	Darwin)
		FOUND_OS="mac"
		;;
	*)
		AC_MSG_CHECKING(if amsn will build on `uname -s`)
		AC_MSG_RESULT(maybe)
		FOUND_OS="unknown"
		;;
esac



dnl ---------------------------------------------------------------------
dnl Checks for functions
if test "$USE_LIBNG" == "yes" ; then

   

AC_CHECK_FUNCS(ftello fseeko getpt strcasestr memmem dlopen )

AC_CHECK_LIB(pthread,pthread_create,LIBPTHREAD="-lpthread")
if test "$LIBPTHREAD" = ""; then
  AC_CHECK_LIB(c_r,pthread_create,LIBPTHREAD="-lc_r")
fi

AC_SUBST(LIBPTHREAD)


AC_SUBST(X_CFLAGS)
AC_SUBST(X_PRE_LIBS)
AC_SUBST(X_EXTRA_LIBS)
AC_SUBST(X_LIBS)
AC_SUBST(x_includes)
AC_SUBST(x_libraries)

dnl ---------------------------------------------------------------------
dnl deinterlace plugins
AC_MSG_CHECKING(if mmx should be used)
AC_SUBST(USE_MMX)
if test "$enable_mmx" = "no" -o "$enable_mmx" = "yes"; then
	USE_MMX="$enable_mmx"
else
	case "`uname -m`" in
		i586 | i686)
			USE_MMX="yes"
			;;
		*)
			USE_MMX="no"
			;;
	esac
fi
AC_MSG_RESULT($USE_MMX)


dnl -- And of check if using libng
fi 


dnl ---------------------------------------------------------------------
dnl write out stuff
AC_OUTPUT(Makefile)

dnl ---------------------------------------------------------------------
dnl compile time options summary

cat <<EOF

compile time options summary
============================

    X11          : $FOUND_X11
    IMLIB	 : $FOUND_IMLIB
    Using Libng  : $USE_LIBNG
    Tcl		 : $TCL_VERSION
    TK 		 : $TK_VERSION

EOF


exit 0
