dnl ---------------------------------------------------------------------
dnl Process this file with autoconf to produce a configure script.

AC_INIT(capture.c)
AC_CONFIG_HEADER(config.h)

dnl ---------------------------------------------------------------------
dnl compile time options

AC_ARG_ENABLE(alsa,
  [  --enable-alsa           enable alsa support])
AC_ARG_ENABLE(mad,
  [  --enable-mad            enable mad support (mpeg audio)])
AC_ARG_ENABLE(mad,
  [  --enable-mpeg2          enable libmpeg2 support (mpeg video)])
AC_ARG_ENABLE(gl,
  [  --enable-gl             enable OpenGL support])
AC_ARG_ENABLE(mmx,
  [  --enable-mmx            enable mmx support])


dnl ---------------------------------------------------------------------
dnl Checks for programs.

AC_PROG_CC
AC_PROG_CXX
AC_PROG_CPP


dnl ---------------------------------------------------------------------
dnl Checks for TCL and TK.

AC_PREFIX_PROGRAM(wish)

TCLSH=`which tclsh`
VERSION=`echo "puts $::tcl_version ; exit" | ${TCLSH}`
AC_ARG_ENABLE(version-check, [  --disable-version-check Disable checking that linked tcl/tk version is the same version that bin program tclsh ],    [version_ok=$enableval], [version_ok=yes])

BUILD_DIR=`pwd`
cd ${srcdir}
TOP_DIR=`pwd`
LIBDIR=`pwd`
cd ${BUILD_DIR}

AC_SUBST(TCLSH)
AC_SUBST(TOP_DIR)
AC_SUBST(LIBDIR)
AC_SUBST(BUILD_DIR)


#--------------------------------------------------------------------
#	Read in configuration information generated by Tcl for shared
#	libraries, and arrange for it to be substituted into our
#	Makefile.
#--------------------------------------------------------------------

AC_MSG_CHECKING(tcl build dir)
TCL_LIB_DIR=$exec_prefix/lib
dirs="	/usr/lib/tcl8.4a* \
	/usr/local/lib/tcl8.4a* \
	/usr/lib/tcl8.4b* \
	/usr/local/lib/tcl8.4b* \
	/usr/lib/tcl8.4 \
	/usr/lib/tcl8.4.* \
	/usr/local/lib/tcl8.4 \
	/usr/local/lib/tcl8.4.* \
	/usr/lib/tcl8.5 \
	/usr/lib/tcl8.5.* \
	/usr/local/lib/tcl8.5 \
	/usr/local/lib/tcl8.5.* \
	/Library/Frameworks/Tcl.framework \
	/Library/Frameworks/Tcl.framework/Versions/8.3 \
	/Library/Frameworks/Tcl.framework/Versions/8.4 \
	/Library/Frameworks/Tcl.framework/Versions/8.5 \
	/usr/local/lib \
	/usr/lib \
	`locate tclConfig.sh`"

for i in $dirs ; do

    if test -f "$i"; then
        i=`dirname $i`
    fi

    if test -d "$i" -a -f "$i/tclConfig.sh"; then
	file=$i/tclConfig.sh
	. $file

	if test "x${version_ok}" != "xyes"; then
	   VERSION=${TCL_VERSION}
	fi

        if  test "x${TCL_INC_DIR}" != "x" -o "x${TCL_INC_SPEC}" != "x" \
            -o "x${TCL_INCLUDE_DIR}" != "x" -o "x${TCL_INCLUDE_SPEC}" != "x"; then
	    if test "x${TCL_VERSION}" == "x${VERSION}" ; then
	       TCL_LIB_DIR=`cd $i; pwd`
	       break;
	    fi
	elif test -f ${TCL_PREFIX}/include/tcl.h; then
	    TCL_LIB_DIR=`cd $i; pwd`
	    break;
	fi

    fi

done
AC_ARG_WITH(tcl, [  --with-tcl=DIR          use Tcl binaries from DIR], TCL_LIB_DIR=$withval,)
if test -d $TCL_LIB_DIR; then
    AC_MSG_RESULT([using tcl library in $TCL_LIB_DIR])
else
    AC_MSG_ERROR(Unable to find Tcl directory or Tcl package is not tcl-dev)
fi

cd ${TCL_LIB_DIR}/..
TCL_TOP_DIR=`pwd`
cd ${BUILD_DIR}

#--------------------------------------------------------------------

file=$TCL_LIB_DIR/tclConfig.sh
. $file
CC=$TCL_CC
CXX=$TCL_CXX
SHLIB_CFLAGS=`echo "$TCL_SHLIB_CFLAGS" |sed -e "s|PIC|pic|" -e "s|+Z|+z|"`
SHLIB_LD=$TCL_SHLIB_LD
SHLIB_SUFFIX=$TCL_SHLIB_SUFFIX
DL_LIBS=$TCL_DL_LIBS
LD_FLAGS=$TCL_LD_FLAGS

TCL_BASE=`echo ${TCL_LIB_SPEC} |sed -e "s|^.*-l||"`
TCL_STUB_BASE=`echo ${TCL_STUB_LIB_SPEC} |sed -e "s|^.*-l||"`

AC_SUBST(TCL_LIB_DIR)

if test "x${TCL_INC_SPEC}" != "x" ; then
   TCL_INC_DIR=$TCL_INC_SPEC
fi


if  test "x${TCL_INCLUDE_SPEC}" != "x"; then
   TCL_INC_DIR=$TCL_INCLUDE_SPEC
fi

if test "x${TCL_INC_DIR}" == "x"; then
   TCL_INC_DIR=$TCL_INCLUDE_DIR
fi

if test "x${TCL_INC_DIR}" == "x" -a -f ${TCL_PREFIX}/include/tcl.h; then
   TCL_INC_DIR=${TCL_PREFIX}/include
fi

if test "x${TCL_INC_DIR}" == "x"; then
   AC_MSG_ERROR(You dot not have a devel package of Tcl)
fi

case $TCL_INC_DIR in
     -I*) ;;
     *) TCL_INC_DIR=-I$TCL_INC_DIR;;
esac

TCL_INC_SPEC=$TCL_INC_DIR

AC_SUBST(TCL_INC_SPEC)

framework=`echo "${TCL_BASE}" | grep -- "-framework"`
if test "x${framework}" == "x"; then
   TCL_LIB_SPEC="-L${TCL_LIB_DIR} -l${TCL_BASE}"
fi
TCL_STUB_LIB_SPEC="-L${TCL_LIB_DIR} -l${TCL_STUB_BASE}"
eval "TCL_UNSHARED_LIB_FILE=lib${TCL_BASE}${TCL_UNSHARED_LIB_SUFFIX}"
eval "TCL_SHARED_LIB_FILE=lib${TCL_BASE}${TCL_SHARED_LIB_SUFFIX}"

#--------------------------------------------------------------------
#	Read in configuration information generated by TK, and 
#	arrange for it to be substituted into our Makefile.
#--------------------------------------------------------------------

AC_MSG_CHECKING(tk build dir)
TK_LIB_DIR=$prefix/lib
if test -f "${TCL_LIB_DIR}/tkConfig.sh"; then
    TK_LIB_DIR=$TCL_LIB_DIR
else
    TK_LIB_DIR=$prefix/lib
    dirs="/usr/lib/tk8.4a* \
	/usr/local/lib/tk8.4a* \
	/usr/lib/tk8.4b* \
	/usr/local/lib/tk8.4b* \
	/usr/lib/tk8.4 \
	/usr/lib/tk8.4.* \
	/usr/local/lib/tk8.4 \
	/usr/local/lib/tk8.4.* \
	/usr/lib/tk8.5 \
	/usr/lib/tk8.5.* \
	/usr/local/lib/tk8.5 \
	/usr/local/lib/tk8.5.* \
	/Library/Frameworks/Tk.framework \
	/Library/Frameworks/Tk.framework/Versions/8.3 \
	/Library/Frameworks/Tk.framework/Versions/8.4 \
	/Library/Frameworks/Tk.framework/Versions/8.5 \
	/usr/local/lib \
	/usr/lib \
	`locate tkConfig.sh`"


    for i in $dirs ; do

	if test -f "$i"; then
	   i=`dirname $i`
	fi

	if test -d "$i" -a -f "$i/tkConfig.sh"; then
	   file=$i/tkConfig.sh
	   . $file

	   if test "x${version_ok}" != "xyes"; then
	      VERSION=${TK_VERSION}
	   fi

	   if  test "x${TK_INC_DIR}" != "x" -o "x${TK_INC_SPEC}" != "x" \
            -o "x${TK_INCLUDE_DIR}" != "x" -o "x${TK_INCLUDE_SPEC}" != "x"; then
	        if test "x${TK_VERSION}" == "x${VERSION}"; then
		   TK_LIB_DIR=`cd $i; pwd`
		   break;
		fi
	   elif test -f ${TK_PREFIX}/include/tk.h; then
		TK_LIB_DIR=`cd $i; pwd`
		break;
	   fi
	fi

    done

fi
AC_ARG_WITH(tk, [  --with-tk=DIR           use Tk binaries from DIR], TK_LIB_DIR=$withval,)
if test -d $TK_LIB_DIR; then
    AC_MSG_RESULT([using tk library in $TK_LIB_DIR])
else
    AC_MSG_ERROR(Unable to find Tk directory or Tk package is not tk-dev)
fi

cd ${TK_LIB_DIR}/..
TK_TOP_DIR=`pwd`
cd ${BUILD_DIR}

file=$TK_LIB_DIR/tkConfig.sh
. $file
AC_SUBST(TK_VERSION)
AC_SUBST(TK_LIB)
AC_SUBST(TK_LIBS)

AC_SUBST(TK_LIB_DIR)

if test "x${TK_INC_SPEC}" != "x" ; then
   TK_INC_DIR=$TK_INC_SPEC
fi

if  test "x${TK_INCLUDE_SPEC}" != "x"; then
   TK_INC_DIR=$TK_INCLUDE_SPEC
fi

if test "x${TK_INC_DIR}" == "x"; then
   TK_INC_DIR=$TK_INCLUDE_DIR
fi

if test "x${TK_INC_DIR}" == "x" -a -f ${TK_PREFIX}/include/tk.h; then
   TK_INC_DIR=${TK_PREFIX}/include
fi

if test "x${TK_INC_DIR}" == "x"; then
   AC_MSG_ERROR(You dot not have a devel package of Tk)
fi

case $TK_INC_DIR in
     -I*) ;;
     *) TK_INC_DIR=-I$TK_INC_DIR;;
esac

TK_INC_SPEC=$TK_INC_DIR

AC_SUBST(TK_INC_SPEC)

AC_SUBST(TCL_STUB_LIB_SPEC)
AC_SUBST(TK_STUB_LIB_SPEC)


dnl ---------------------------------------------------------------------
dnl do some OS specific stuff here

AC_SUBST(FOUND_ALSA)
AC_SUBST(FOUND_MAD)
AC_SUBST(FOUND_MPEG2)
AC_SUBST(FOUND_MOTIF)
AC_SUBST(FOUND_OS)
AC_SUBST(FOUND_GL)
AC_SUBST(LDLIBS)


FOUND_ALSA="no"
FOUND_MAD="no"
FOUND_MPEG2="no"
FOUND_MOTIF="no"
FOUND_OS="unknown"
FOUND_GL="no"

case "`uname -s`" in
	Linux)
		FOUND_OS="linux"
		;;
	OpenBSD | FreeBSD | NetBSD)
		# *BSD has important stuff (from ports)
		# in /usr/local ...
		CFLAGS="$CFLAGS -I/usr/local/include -L/usr/local/lib"
		LDFLAGS="$LDFLAGS -L/usr/local/lib"
		FOUND_OS="bsd"
		;;
	*)
		AC_MSG_CHECKING(if capture will build on `uname -s`)
		AC_MSG_RESULT(maybe)
		FOUND_OS="unknown"
		;;
esac


dnl ---------------------------------------------------------------------
dnl Checks for functions

AC_CHECK_HEADERS(soundcard.h unistd.h sys/soundcard.h alsa/asoundlib.h)


AC_CHECK_FUNCS(ftello fseeko getpt strcasestr memmem dlopen )

AC_CHECK_LIB(pthread,pthread_create,LIBPTHREAD="-lpthread")
if test "$LIBPTHREAD" = ""; then
  AC_CHECK_LIB(c_r,pthread_create,LIBPTHREAD="-lc_r")
fi
AC_CHECK_LIB(ossaudio,main,LIBOSS="-lossaudio")

AC_SUBST(LIBPTHREAD)
AC_SUBST(LIBOSS)


AC_CHECK_LIB(jpeg, jpeg_start_compress, JPEG="found",,)
#if test "$JPEG" != "found"; then
#    echo "Oops:	jpeg library not found.  You need this one, please install."
#    echo "Note:	to compile stuff just the library packages are not enougth,"
#    echo "	you need also the *-devel packages."
#    exit 1
#fi

AC_SUBST(LIBALSA)
LIBALSA=""
if test "$enable_alsa" != "no" ; then
    AC_CHECK_LIB(asound, snd_seq_open,
	AC_DEFINE(HAVE_ALSA,1,"have alsa") FOUND_ALSA="yes"; LIBALSA="-lasound",,)
else
    echo "*** alsa disabled"
fi

AC_SUBST(LIBMAD)
LIBMAD=""
if test "$enable_mad" != "no"; then
    AC_CHECK_LIB(mad, mad_decoder_init,
	AC_DEFINE(HAVE_LIBMAD,1,"have mad") FOUND_MAD="yes"; LIBMAD="-lmad",,)
else
    echo "*** mad disabled"
fi

AC_SUBST(LIBMPEG2)
LIBMPEG2=""
if test "$enable_mpeg2" != "no"; then
    AC_CHECK_LIB(mpeg2, mpeg2_init,
	AC_DEFINE(HAVE_LIBMPEG2,1,"have libmpeg2") FOUND_MPEG2="yes"; LIBMPEG2="-lmpeg2",,)
else
    echo "*** libmpeg2 disabled"
fi

AC_SUBST(LIBGL)
LIBGL=""
if test "$enable_gl" != "no"; then
    AC_CHECK_LIB(GL, glXChooseVisual,
        AC_DEFINE(HAVE_GL,1,"have opengl") FOUND_GL="yes"; LIBGL="-lGL -lm",,
	$X_LIBS $X_PRE_LIBS -lXext -lX11 $X_EXTRA_LIBS -lm)
else
    echo "*** OpenGL disabled"
fi


dnl ---------------------------------------------------------------------
dnl deinterlace plugins
AC_MSG_CHECKING(if mmx should be used)
AC_SUBST(USE_MMX)
if test "$enable_mmx" = "no" -o "$enable_mmx" = "yes"; then
	USE_MMX="$enable_mmx"
else
	case "`uname -m`" in
		i586 | i686)
			USE_MMX="yes"
			;;
		*)
			USE_MMX="no"
			;;
	esac
fi
AC_MSG_RESULT($USE_MMX)

dnl ---------------------------------------------------------------------
dnl write out stuff
AC_OUTPUT(Makefile)

dnl ---------------------------------------------------------------------
dnl compile time options summary

cat <<EOF

compile time options summary
============================

    alsa         : $FOUND_ALSA
    mad          : $FOUND_MAD
    mpeg2        : $FOUND_MPEG2
    OpenGL       : $FOUND_GL
    Tcl		 : $TCL_VERSION
    TK 		 : $TK_VERSION

EOF


exit 0
