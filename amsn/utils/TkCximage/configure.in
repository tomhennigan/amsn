dnl	This file is an input file used by the GNU "autoconf" program to
dnl	generate the file "configure", which is run during Tk installation
dnl	to configure the system for the local environment.
AC_INIT(src/TkCximage.h)

# @(#) configure.in 1.0 97/2/11 12:50:30

NAME=TkCximage
TKCXIMAGE_VERSION=0.1

AC_PREFIX_PROGRAM(wish)

AC_SUBST(NAME)

# -------------------------------------------------------------------

BUILD_DIR=`pwd`
cd ${srcdir}
TOP_DIR=`pwd`
cd ${BUILD_DIR}

AC_SUBST(TOP_DIR)
AC_SUBST(BUILD_DIR)


#--------------------------------------------------------------------
#	Read in configuration information generated by Tcl for shared
#	libraries, and arrange for it to be substituted into our
#	Makefile.
#--------------------------------------------------------------------

AC_MSG_CHECKING(tcl build dir)
TCL_LIB_DIR=$exec_prefix/lib
dirs="	/usr/lib/tcl8.4a* \
	/usr/local/lib/tcl8.4a* \
	/usr/lib/tcl8.4b* \
	/usr/local/lib/tcl8.4b* \
	/usr/lib/tcl8.4 \
	/usr/lib/tcl8.4.* \
	/usr/local/lib/tcl8.4 \
	/usr/local/lib/tcl8.4.* \
	/usr/lib/tcl8.5 \
	/usr/lib/tcl8.5.* \
	/usr/local/lib/tcl8.5 \
	/usr/local/lib/tcl8.5.* \
	/Library/Frameworks/Tcl.framework \
	/Library/Frameworks/Tcl.framework/Versions/8.3 \
	/Library/Frameworks/Tcl.framework/Versions/8.4 \
	/Library/Frameworks/Tcl.framework/Versions/8.5 \
	`locate tclConfig.sh`"

for i in $dirs ; do

    if test -f "$i"; then
        i=`dirname $i`
    fi

    if test -d "$i" -a -f "$i/tclConfig.sh"; then
	file=$i/tclConfig.sh
	. $file
        if  test "x${TCL_INC_DIR}" != "x" -o "x${TCL_INC_SPEC}" != "x" \
            -o "x${TCL_INCLUDE_DIR}" != "x" -o "x${TCL_INCLUDE_SPEC}" != "x"; then
	    TCL_LIB_DIR=`cd $i; pwd`
	    echo "Found it"
	    break;
	fi

    fi

done
AC_ARG_WITH(tcl, [  --with-tcl=DIR          use Tcl binaries from DIR], TCL_LIB_DIR=$withval,)
if test -d $TCL_LIB_DIR; then
    AC_MSG_RESULT([using tcl library in $TCL_LIB_DIR])
else
    AC_MSG_ERROR(Unable to find Tcl directory or Tcl package is not tcl-dev)
fi

cd ${TCL_LIB_DIR}/..
TCL_TOP_DIR=`pwd`
cd ${BUILD_DIR}

#--------------------------------------------------------------------

file=$TCL_LIB_DIR/tclConfig.sh
. $file
CC=$TCL_CC
CXX=$TCL_CXX
SHLIB_CFLAGS=`echo "$TCL_SHLIB_CFLAGS" |sed -e "s|PIC|pic|" -e "s|+Z|+z|"`
SHLIB_LD=$TCL_SHLIB_LD
SHLIB_SUFFIX=$TCL_SHLIB_SUFFIX
DL_LIBS=$TCL_DL_LIBS
LD_FLAGS=$TCL_LD_FLAGS

TCL_BASE=`echo ${TCL_LIB_SPEC} |sed -e "s|^.*-l||"`
TCL_STUB_BASE=`echo ${TCL_STUB_LIB_SPEC} |sed -e "s|^.*-l||"`

AC_SUBST(TCL_LIB_DIR)

if test "x${TCL_INC_SPEC}" != "x" ; then
   TCL_INC_DIR=$TCL_INC_SPEC
fi


if  test "x${TCL_INCLUDE_SPEC}" != "x"; then
   TCL_INC_DIR=$TCL_INCLUDE_SPEC
fi

if test "x${TCL_INC_DIR}" == "x"; then
   TCL_INC_DIR=$TCL_INCLUDE_DIR
fi


if test "x${TCL_INC_DIR}" == "x"; then
   AC_MSG_ERROR(You dot not have a devel package of Tcl)
fi

case $TCL_INC_DIR in
     -I*) ;;
     *) TCL_INC_DIR=-I$TCL_INC_DIR;;
esac

TCL_INC_SPEC=$TCL_INC_DIR

AC_SUBST(TCL_INC_SPEC)
if test -d ${TCL_TOP_DIR}/lib/tcl${TCL_VERSION} -a -f ${TCL_TOP_DIR}/lib/tcl${TCL_VERSION}/init.tcl; then
    TCL_LIBRARY=${TCL_TOP_DIR}/lib/tcl${TCL_VERSION}
elif test -d ${TCL_TOP_DIR}/lib/tcl${TCL_VERSION} -a -f ${TCL_TOP_DIR}/lib/tcl${TCL_VERSION}/init.tcl; then
    TCL_LIBRARY=${TCL_TOP_DIR}/lib/tcl${TCL_VERSION}
elif test -d ${TCL_TOP_DIR}/library -a -f ${TCL_TOP_DIR}/library/init.tcl; then
    TCL_LIBRARY=${TCL_TOP_DIR}/library
elif test -d ${TCL_PREFIX}/lib/tcl${TCL_VERSION} -a -f ${TCL_PREFIX}/lib/tcl${TCL_VERSION}/init.tcl; then
    TCL_LIBRARY=${TCL_PREFIX}/lib/tcl${TCL_VERSION}
elif test -d ${TCL_PREFIX}/lib/tcl${TCL_VERSION} -a -f ${TCL_PREFIX}/lib/tcl${TCL_VERSION}/init.tcl; then
    TCL_LIBRARY=${TCL_PREFIX}/lib/tcl${TCL_VERSION}
else
    TCL_LIBRARY=$prefix/lib/tcl${TCL_VERSION}
fi
AC_SUBST(TCL_LIBRARY)

framework=`echo "${TCL_BASE}" | grep -- "-framework"`
if test "x${framework}" == "x"; then
   TCL_LIB_SPEC="-L${TCL_LIB_DIR} -l${TCL_BASE}"
fi
TCL_STUB_LIB_SPEC="-L${TCL_LIB_DIR} -l${TCL_STUB_BASE}"
VERSION=""
eval "TCL_UNSHARED_LIB_FILE=lib${TCL_BASE}${TCL_UNSHARED_LIB_SUFFIX}"
eval "TCL_SHARED_LIB_FILE=lib${TCL_BASE}${TCL_SHARED_LIB_SUFFIX}"

#--------------------------------------------------------------------
#	Read in configuration information generated by TK, and 
#	arrange for it to be substituted into our Makefile.
#--------------------------------------------------------------------

AC_MSG_CHECKING(tk build dir)
TK_LIB_DIR=$prefix/lib
if test -f "${TCL_LIB_DIR}/tkConfig.sh"; then
    TK_LIB_DIR=$TCL_LIB_DIR
else
    TK_LIB_DIR=$prefix/lib
    dirs="/usr/lib/tk8.4a* \
	/usr/local/lib/tk8.4a* \
	/usr/lib/tk8.4b* \
	/usr/local/lib/tk8.4b* \
	/usr/lib/tk8.4 \
	/usr/lib/tk8.4.* \
	/usr/local/lib/tk8.4 \
	/usr/local/lib/tk8.4.* \
	/usr/lib/tk8.5 \
	/usr/lib/tk8.5.* \
	/usr/local/lib/tk8.5 \
	/usr/local/lib/tk8.5.* \
	/Library/Frameworks/Tk.framework \
	/Library/Frameworks/Tk.framework/Versions/8.3 \
	/Library/Frameworks/Tk.framework/Versions/8.4 \
	/Library/Frameworks/Tk.framework/Versions/8.5 \
	`locate tkConfig.sh`"


    for i in $dirs ; do

	if test -f "$i"; then
	   i=`dirname $i`
	fi

	if test -d "$i" -a -f "$i/tkConfig.sh"; then
	   file=$i/tkConfig.sh
	   . $file
	   if  test "x${TK_INC_DIR}" != "x" -o "x${TK_INC_SPEC}" != "x" \
            -o "x${TK_INCLUDE_DIR}" != "x" -o "x${TK_INCLUDE_SPEC}" != "x"; then
	        if test "x${TK_VERSION}" -eq "x${TCL_VERSION}"; then
		   TK_LIB_DIR=`cd $i; pwd`
		   break;
		fi
	   fi
	fi

    done

fi
AC_ARG_WITH(tk, [  --with-tk=DIR           use Tk binaries from DIR], TK_LIB_DIR=$withval,)
if test -d $TK_LIB_DIR; then
    AC_MSG_RESULT([using tk library in $TK_LIB_DIR])
else
    AC_MSG_ERROR(Unable to find Tk directory or Tk package is not tk-dev)
fi

cd ${TK_LIB_DIR}/..
TK_TOP_DIR=`pwd`
cd ${BUILD_DIR}

file=$TK_LIB_DIR/tkConfig.sh
. $file
AC_SUBST(TK_VERSION)
AC_SUBST(TK_LIB)
AC_SUBST(TK_LIBS)

AC_SUBST(TK_LIB_DIR)

if test "x${TK_INC_SPEC}" != "x" ; then
   TK_INC_DIR=$TK_INC_SPEC
fi

if  test "x${TK_INCLUDE_SPEC}" != "x"; then
   TK_INC_DIR=$TK_INCLUDE_SPEC
fi

if test "x${TK_INC_DIR}" == "x"; then
   TK_INC_DIR=$TK_INCLUDE_DIR
fi


if test "x${TK_INC_DIR}" == "x"; then
   AC_MSG_ERROR(You dot not have a devel package of Tk)
fi

case $TK_INC_DIR in
     -I*) ;;
     *) TK_INC_DIR=-I$TK_INC_DIR;;
esac

TK_INC_SPEC=$TK_INC_DIR

AC_SUBST(TK_INC_SPEC)
if test -d ${TK_TOP_DIR}/lib/tk${TK_VERSION} -a -f ${TK_TOP_DIR}/lib/tk${TK_VERSION}/tk.tcl; then
    TK_LIBRARY=${TK_TOP_DIR}/lib/tk${TK_VERSION}
elif test -d ${TK_TOP_DIR}/lib/tk${TK_VERSION} -a -f ${TK_TOP_DIR}/lib/tk${TK_VERSION}/tk.tcl; then
    TK_LIBRARY=${TK_TOP_DIR}/lib/tk${TK_VERSION}
elif test -d ${TK_TOP_DIR}/library -a -f ${TK_TOP_DIR}/library/tk.tcl; then
    TK_LIBRARY=${TK_TOP_DIR}/library
elif test -d ${TK_PREFIX}/lib/tk${TK_VERSION} -a -f ${TK_PREFIX}/lib/tk${TK_VERSION}/tk.tcl; then
    TK_LIBRARY=${TK_PREFIX}/lib/tk${TK_VERSION}
elif test -d ${TK_PREFIX}/lib/tk${TK_VERSION} -a -f ${TK_PREFIX}/lib/tk${TK_VERSION}/tk.tcl; then
    TK_LIBRARY=${TK_PREFIX}/lib/tk${TK_VERSION}
else
    TK_LIBRARY=$prefix/lib/tcl${TK_VERSION}
fi
AC_SUBST(TK_LIBRARY)

TK_BASE=`echo ${TK_LIB_SPEC} |sed -e "s|^.*-l||"`
TK_STUB_BASE=`echo ${TK_STUB_LIB_SPEC} |sed -e "s|^.*-l||"`

framework=`echo "${TK_BASE}" | grep -- "-framework"`
if test "x${framework}" == "x"; then
   TK_LIB_SPEC="-L${TK_LIB_DIR} -l${TK_BASE}"
fi
TK_STUB_LIB_SPEC="-L${TK_LIB_DIR} -l${TK_STUB_BASE}"
VERSION=""
eval "TK_UNSHARED_LIB_FILE=lib${TK_BASE}${TCL_UNSHARED_LIB_SUFFIX}"
eval "TK_SHARED_LIB_FILE=lib${TK_BASE}${TCL_SHARED_LIB_SUFFIX}"

X11_LIB_DIR=`echo ${TK_XLIBSW} |sed -e 's/-L//' -e 's/-l.*$//g' -e 's/ //'`
LIB_RUNTIME_DIR="${BUILD_DIR}"
if test "x${X11_LIB_DIR}" != "x"; then
    LIB_RUNTIME_DIR="${LIB_RUNTIME_DIR}:${X11_LIB_DIR}"
fi
AC_SUBST(X11_LIB_DIR)


#--------------------------------------------------------------------
LIB_INSTALL_DIR="${LIB_RUNTIME_DIR}"
#--------------------------------------------------------------------
#	The statements below define a collection of symbols related to
#	building TkCximage as a shared library instead of a static library.
#--------------------------------------------------------------------

TCL_SHARED_LIBS=""
#--------------------------------------------------------------------
AC_ARG_ENABLE(stubs, [  --disable-stubs         disable stub support for tkcximage],
    tk[cximage_ok=$enableval], [tkcximage_ok=yes])
if test "$tkcximage_ok" != "no"; then
    TCL_DEFS="$TCL_DEFS -DUSE_TCL_STUBS -DUSE_TK_STUBS"
    TCL_SHARED_LIBS="${TK_STUB_LIB_SPEC} ${TCL_STUB_LIB_SPEC}"
else
    case "$SHLIB_LD" in
	*ldAix*)
	TCL_SHARED_LIBS='${TK_LIB_SPEC} ${TCL_LIB_SPEC}'
	;;
    esac
fi

case "$SHLIB_LD" in
    *ldAix*)
    TCL_SHARED_LIBS="${TCL_SHARED_LIBS} \${TK_XLIBSW}"
    ;;
esac

VERSION=""


# Note:  in the following variable, it's important to use the absolute
# path name of the Tcl directory rather than "..":  this is because
# AIX remembers this path and will attempt to use it at run-time to look
# up the Tcl library.

TEST_SUFFIX="${SHLIB_SUFFIX}"
if test "x$ok" != "xyes"; then
    COMPAT_OBJS="${TOP_DIR}/compat/tclLoadNone.o"
elif test "x$DL_LIBS" = "x-ldl"; then
    COMPAT_OBJS=""
    dirs="/lib/libdl${TEST_SUFFIX}* /usr/lib/libdl${TEST_SUFFIX}*"
    for i in $dirs ; do
	if test -f $i; then
	    SHARED_LIBS="${SHARED_LIBS} -ldl"
	    break;
	fi
    done
elif test "x$DL_LIBS" = "x-ldld"; then
    if test "x$SHLIB_SUFFIX" = "x.sl"; then
	COMPAT_OBJS="${TOP_DIR}/compat/tclLoadShl.o"
    else
	COMPAT_OBJS="${TOP_DIR}/compat/tclLoadDld.o"
    fi
    dirs="/lib/libdld${TEST_SUFFIX}* /usr/lib/libdld${TEST_SUFFIX}*"
    for i in $dirs ; do
	if test -f $i; then
	    SHARED_LIBS="${SHARED_LIBS} -ldld"
	    break;
	fi
    done
elif test "x$DL_LIBS" = "x-lld"; then
    COMPAT_OBJS="${TOP_DIR}/compat/tclLoadAix.o"
    SHARED_LIBS="-lld"
    TEST_SUFFIX=".a"
elif test "x$SHLIB_SUFFIX" = "x.a"; then
    COMPAT_OBJS="${TOP_DIR}/compat/tclLoadAout.o"
    if test "x${SHLIB_CFLAGS}" = "x-G 0"; then
	TEST_SUFFIX="_G0.a"
    else
	TEST_SUFFIX=".a"
    fi
elif test "x$SHLIB_SUFFIX" = "x.dll"; then
    COMPAT_OBJS="${TOP_DIR}/compat/tclLoadWin.o"
elif test "x$SHLIB_SUFFIX" = "x.shlb"; then
    COMPAT_OBJS="${TOP_DIR}/compat/tclLoadMac.o"
elif test "x$SHLIB_SUFFIX" != "x.so"; then
    COMPAT_OBJS="${TOP_DIR}/compat/tclLoadNone.o"
fi

dirs="/lib/libm${TEST_SUFFIX}* /usr/lib/libm${TEST_SUFFIX}*"
for i in $dirs ; do
    if test -f $i; then
	SHARED_LIBS="${SHARED_LIBS} -lm"
	break;
    fi
done
dirs="/lib/libc${TEST_SUFFIX}* /usr/lib/libc${TEST_SUFFIX}*"
for i in $dirs ; do
    if test -f $i; then
	SHARED_LIBS="${SHARED_LIBS} -lc"
	break;
    fi
done

AC_SUBST(SHARED_LIBS)

CFLAGS=${TCL_CFLAGS}

AC_SUBST(CC)
AC_SUBST(CFLAGS)
AC_SUBST(LD_FLAGS)
AC_SUBST(SHLIB_CFLAGS)
AC_SUBST(SHLIB_CXXFLAGS)
AC_SUBST(SHLIB_LD)
SHLIB_LD_LIBS=$TCL_SHLIB_LD_LIBS
AC_SUBST(SHLIB_LD_LIBS)
AC_SUBST(SHLIB_SUFFIX)
AC_SUBST(COMPAT_OBJS)
AC_SUBST(TCL_VERSION)
AC_SUBST(TCL_DEFS)
AC_SUBST(TCL_BIN_DIR)
AC_SUBST(TCL_LIB_FILE)
AC_SUBST(TCL_LIBS)
AC_SUBST(TCL_LIB_SPEC)
AC_SUBST(TCL_STUB_LIB_SPEC)
AC_SUBST(TCL_SHARED_LIBS)
AC_SUBST(TCL_SHARED_LIB_FILE)
AC_SUBST(TCL_UNSHARED_LIB_FILE)
AC_SUBST(TK_SHARED_LIB_FILE)
AC_SUBST(TK_UNSHARED_LIB_FILE)
AC_SUBST(TK_BIN_DIR)
AC_SUBST(TK_LIB_FILE)
AC_SUBST(TK_LIB_SPEC)
AC_SUBST(TK_STUB_LIB_SPEC)
AC_SUBST(TK_XLIBSW)
AC_SUBST(TK_XINCLUDES)
AC_SUBST(NAME)
TKCXIMAGE_FILE=${NAME}${TCL_SHLIB_SUFFIX}
AC_SUBST(TKCXIMAGE_FILE)
AC_SUBST(TKCXIMAGE_VERSION)
AR=ar
AR_OPTIONS=scru
RANLIB=ranlib
AC_SUBST(AR)
AC_SUBST(AR_OPTIONS)
AC_SUBST(RANLIB)

#--------------------------------------------------------------------
#	Finally
#--------------------------------------------------------------------

AC_OUTPUT(src/CxImage/Makefile \
src/zlib/Makefile \
src/png/Makefile \
src/jpeg/Makefile \
src/Makefile \
Makefile \
pkgIndex.tcl)
