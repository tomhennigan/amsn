#!/usr/bin/perl
# Author: Didimo Emilio Grimaldo Tunon
# Revision: 1.1
# Date : 29 May 2002
# Description: Check TCL language catalogs for integrity
#----------------------------------------------------------------------
# Usage:
#	checklang [-d|-l|-a] {-x=id|-r}
# Options: Long        Short    Default     Description
#	  --dir=path , -d=path	lang	    Path to language directory
#	  --lang=es  , -l=es	en	    Master language
#	  --all      , -a       off	    Show all entries
# Command: Long        Short    Description
#	  --xlat=save  -x=save	Show all translations for phrase id <save>
#	  --show       -s       Show which phrase ids are present/absent
# Examples
#	checklang --show --all
#	checklang --show
#	checklang --xlat=chat
use strict;
use DirHandle;
use Getopt::Long;

my $masterLanguage = "en";
my $langDir = "lang";
my $translate;
my $show;
my $showAll;

my %entryCount = ();
my %langMaster = ();
my %langSlave = ();
my @langfiles = ();

sub FindLanguageFiles {
    my $dir = shift;
    my $aLang = shift;
    my $this_file;

    if (opendir(DIRHANDLE, $dir)) {
        while ($this_file = readdir(DIRHANDLE)) {
	    if ($this_file !~ /^\.{1,2}$/) {
		if ($this_file ne 'CVS' &&
		    $this_file =~ m/^lang/) {
		    # It is supposed to be a signature, add it
#		    print "Found $this_file\n";
		    push(@$aLang, $this_file);
		}
	    }
	}
    } else { die "FindLanguageFiles: $!\n"; }    
}

sub LoadLanguage {
    my $lang = shift;
    my $dict = shift;
    my $entries = 0;
    my $filename = "$langDir/lang$lang";

    open(DICT,"< $filename") || die "LoadLanguage: $filename $!\n";
    while (<DICT>) {
        chomp;
 	my ($key, $trans) = split(/\s+/, $_, 2);
	$$dict{$key} = $trans;
	$entries++;
    }
    close(DICT);
    return $entries;
}
    
sub GetLangCode {
    my $file = shift;
    my $langcode;
    $langcode = $file;
    $langcode =~ s/^lang//;
    return $langcode;
}

sub Report {
    my $langCode;
    my $langFile;
    my $i;
    my $isMaster;

    print "Summary of Entries\n";
    foreach $i (0 .. $#langfiles) {
	$langFile = $langfiles[$i];
	$langCode = &GetLangCode($langFile);
	$isMaster = ($langCode eq $masterLanguage ? '*' : '');
	
	print "\t$langFile $langCode $entryCount{$langCode} $isMaster\n";
    }
}

sub ApiTranslate {
    my $phraseId = shift;
    my $i;
    my $translation;
    my $langCode;

    print "Translations for phrase token: $phraseId\n";
    if (exists($langMaster{$phraseId})) {
        print "* $masterLanguage : $langMaster{$phraseId}\n";
    } else {
        print "* $masterLanguage : ERROR-PHRASE-NOT-AVAILABLE\n";
    }
    for $i (0 .. $#langfiles) {
	$langCode = &GetLangCode($langfiles[$i]);
	if ($langCode ne $masterLanguage) {
	    $entryCount{$langCode} = &LoadLanguage($langCode,\%langSlave);
	    if (exists($langSlave{$phraseId})) {
		print "  $langCode : $langSlave{$phraseId}\n";
	    } else {
		print "  $langCode : ERROR-PHRASE-NOT-AVAILABLE\n";
	    }
	}
    }
}

sub ApiShow {
    my $langCode;
    my ($key, $key2);
    my %dicts;
    my ($dictCount, $tokensFound, $tokensIn);
    my (%dictnl,%dictda,%dictes,%dictfr,%dictit,%dictpt,%dicttr);
    my $supportedLangs = "nl da en es fr it pt tr";
    
    print "Token summary\nLanguage Catalogs: $supportedLangs\n";
    # Load all dictionaries. Master dict. already loaded in Main
    $dictCount = $#langfiles + 1;
    for $key (0..$#langfiles) {
	$langCode = &GetLangCode($langfiles[$key]);
	if ($langCode ne $masterLanguage) {
	    $entryCount{$langCode} = &LoadLanguage($langCode,\%langSlave);
	    if ($langCode eq "nl") {
	        %dictnl = %langSlave;
		$dicts{'nl'} = \%dictnl;
	    } elsif ($langCode eq "da") {
	        %dictda = %langSlave;
		$dicts{'da'} = \%dictda;
	    } elsif ($langCode eq "es") {
	        %dictes = %langSlave;
		$dicts{'es'} = \%dictes;
	    } elsif ($langCode eq "fr") {
	        %dictfr = %langSlave;
		$dicts{'fr'} = \%dictfr;
	    } elsif ($langCode eq "it") {
	        %dictit = %langSlave;
		$dicts{'it'} = \%dictit;
	    } elsif ($langCode eq "pt") {
	        %dictpt = %langSlave;
		$dicts{'pt'} = \%dictpt;
	    } elsif ($langCode eq "tr") {
	        %dicttr = %langSlave;
		$dicts{'tr'} = \%dicttr;
	    }
        }
    }
    
    foreach $key (sort keys %langMaster) { # Each token in Master
	my $missing = $supportedLangs;

	$tokensFound = 0;
	$tokensIn = "";		# catalogs where token was found
        foreach $key2 (sort keys %dicts) { # Check each secondary dict.
	    if (exists($dicts{$key2}{$key})) {
	        $tokensFound++;
		$tokensIn = "$tokensIn $key2";
		$missing =~ s/$key2//;
	    }
	}

	if ($tokensFound < $dictCount - 1) { # Missing entries
	    printf "\t%20s NEEDED IN: $missing\n", $key;
	} elsif ($showAll) {
	    printf "\t%20s COMPLETE\n", $key;
	}
    }
}


&GetOptions('lang|l=s'	=> \$masterLanguage,	# option
	    'xlat|x=s'	=> \$translate,		# command
	    'dir|d=s'	=> \$langDir,		# option
	    'all|a'	=> \$showAll,		# option
	    'show|s'	=> \$show		# command
	   );
&FindLanguageFiles($langDir, \@langfiles); 
$entryCount{$masterLanguage} = &LoadLanguage($masterLanguage,\%langMaster);
&ApiTranslate($translate) if $translate;
&ApiShow if $show;
&Report;
