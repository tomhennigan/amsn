/* Copyright (C) 2005  Ole André Vadla Ravnås <oleavr@gmail.com>
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2.1 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 */

#ifndef MIMIC_PRIVATE_H
#define MIMIC_PRIVATE_H

#include "mimic.h"

#define MIMIC_ENCODER_DEFAULT_QUALITY 0

struct _MimCtx {
    bool encoder_initialized;
    bool decoder_initialized;
    
    int frame_width;
    int frame_height;
    int quality;
    int num_coeffs;
    
    int y_stride;
    int y_row_count;
    int y_size;
    
    int crcb_stride;
    int crcb_row_count;
    int crcb_size;
    
    int num_vblocks_y;
    int num_hblocks_y;
    
    int num_vblocks_cbcr;
    int num_hblocks_cbcr;
    
    BYTE *cur_frame_buf;
    BYTE *prev_frame_buf;
    
    char vlcdec_lookup[2296];
    
    char *data_buffer;
    UINT data_index;

    DWORD cur_chunk;
    int cur_chunk_len;
    
    DWORD *chunk_ptr;
    bool read_odd;

    int frame_num;
    
    int ptr_index;
    BYTE *buf_ptrs[16];
};

typedef struct {
	BYTE length1;
	DWORD part1;

	BYTE length2;
	DWORD part2;
} VlcSymbol;

typedef struct {
    DWORD magic;
    BYTE pos_add;
    BYTE num_bits;
} VlcMagic;

void _mimic_init(MimCtx *ctx, int width, int height);
BYTE _clamp_value(int value);

DWORD _read_bits(MimCtx *ctx, int num_bits);
void _write_bits(MimCtx *ctx, DWORD bits, int length);

void _vlc_encode_block(MimCtx *ctx, const int *block, int num_coeffs);
bool _vlc_decode_block(MimCtx *ctx, int *block, int num_coeffs);

void _fdct_quant_block(MimCtx *ctx, int *block, const BYTE *src,
                       int stride, bool is_chrom, int num_coeffs);
void _idct_dequant_block(MimCtx *ctx, int *block, bool is_chrom);

VlcMagic *_find_magic(UINT magic);
void _initialize_vlcdec_lookup(char *lookup_tbl);

void _rgb_to_yuv(const BYTE *input_rgb,
                 BYTE *output_y,
                 BYTE *output_cb,
                 BYTE *output_cr,
                 int width,
                 int height);
void _yuv_to_rgb(const BYTE *input_y,
                 const BYTE *input_cb,
                 const BYTE *input_cr,
                 BYTE *output_rgb,
                 UINT width,
                 UINT height);

void _deblock(BYTE *blocks, UINT stride, UINT row_count);


#define FALSE 0
#define TRUE 1

#define g_new(struct_type, n_structs)		\
    ((struct_type *) malloc (sizeof (struct_type) * n_structs))

#define g_new0(struct_type, n_structs)		\
    ((struct_type *) memset(malloc (sizeof (struct_type) * n_structs), 0, sizeof (struct_type) * n_structs))

#define g_free free


#endif // MIMIC_PRIVATE_H

