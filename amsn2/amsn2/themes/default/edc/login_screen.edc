
images {
  image: "login_bg.png" COMP;
  image: "combobox.png" COMP;
  image: "amsn.png" COMP;
  image: "entry.png" COMP;
  image: "button.png" COMP;
  image: "button_hover.png" COMP;
  image: "language_icon.png" COMP;
  image: "arrow.png" COMP;
#include "logo_anim_images.edc"
}


group {
  name: "login_screen";


  script {
    public animate_arrow = 1
    public remove_button = 0
    public cube_animated = 0
  }

  parts {
    part {
      name: "background";
      type: RECT;
      mouse_events: 0;
      description {
        state: "default" 0.0;
        color: 255 255 255 255;
        rel1 {
          relative: 0.0 0.0;
          offset: 0 0;
        }
        rel2 {
          relative: 1.0 1.0;
          offset: 0 0;
        }
      }
    }
    part {
      name: "background_spectrum";
      type: GRADIENT;
      mouse_events: 0;
      description {
        state: "default" 0.0;
        rel1 {
          relative: 0.0 0.0;
          offset: 0 0;
        }
        rel2 {
          relative: 1.0 1.0;
          offset: 0 0;
        }
	gradient {
	  spectrum: "login_screen_spectrum";
	  type: "radial";
          rel1 {
            relative: 0.0 0.0;
            offset: 0 0;
          }
          rel2 {
            relative: 1.0 1.0;
            offset: 0 0;
          }
	}
	fill {

	  origin {
	    relative: 0.0 0.0;
	  }
	}
      }
    }

    part {
      name: "background_image";
      type: IMAGE;
      mouse_events: 0;
      description {
        state: "default" 0.0;
        min: 40 30;
        rel1 {
          relative: 1.0 1.0;
          offset: -60 -280;
        }
        rel2 {
          relative: 1.0 1.0;
          offset: 0 0;
        }
        image {
          normal: "login_bg.png";
          border: 0 0 0 0;
        }
      }
    }
    part {
      name: "language_frame";
      type: RECT;
      description {
        state: "default" 0.0;
        color: 0 0 0 0;
	rel1 {
	  relative: 0.0 0.0;
	  offset: 0 0;
	}
	rel2 {
	  relative: 1.0 0.0;
	  offset: 0 70;
	}
      }
      description {
        state: "connecting" 0.0;
        inherit: "default" 0.0;
        visible: 0;
      }
    }

    part {
      name: "language_button";
      type: IMAGE;
      description {
        state: "default" 0.0;

        rel1 {
	  to: "language_frame";
          relative: 0.0 0.0;
          offset: 4 4;
        }
        rel2 {
	  to: "language_frame";
          relative: 0.0 1.0;
          offset: 67 -4;
        }
        image {
          normal: "language_icon.png";
          border: 0 0 0 0;
        }
      }
      description {
        state: "connecting" 0.0;
        inherit: "default" 0.0;
        visible: 0;
      }
    }
    part {
      name: "language_spacer";
      type: RECT;
      description {
        state: "default" 0.0;
        color: 0 0 0 0;
	rel1 {
	  to: "language_button";
	  relative: 1.0 0.0;
	  offset: 0 0;
	}
	rel2 {
	  to: "language_button";
	  relative: 1.0 1.0;
	  offset: 5 0;
	}
      }
      description {
        state: "connecting" 0.0;
        inherit: "default" 0.0;
        visible: 0;
      }
    }
    part {
      name: "language_text";
      type: TEXT;
      description {
        state: "default" 0.0;
	rel1 {
	  to: "language_spacer";
	  relative: 1.0 0.0;
	  offset: 0 0;
	}
	rel2 {
	  to_y: "language_spacer";
	  relative: 1.0 1.0;
	  offset: -4 0;
	}
        color: 0 0 0 255;
        color2: 225 225 225 128;
	text {
	  align: 0.0 0.5;
	  font: "VeraBd";
	  size: 10;
	  text: "Change Language";
	  min: 0 0;
	  elipsis: 0.0;
	}
      }
      description {
        state: "connecting" 0.0;
        inherit: "default" 0.0;
        visible: 0;
      }
    }
    part {
      name: "main_frame";
      type: RECT;
      description {
        state: "default" 0.0;
        color: 0 0 0 0;
	rel1 {
	  to: "language_frame";
	  relative: 0.0 1.0;
	  offset: 0 0;
	}
	rel2 {
	  relative: 1.0 1.0;
	  offset: 0 0;
	}
      }
      description {
        state: "connecting" 0.0;
        inherit: "default" 0.0;
        visible: 0;
      }
    }
    part {
      name: "dp_frame";
      type: IMAGE;
      mouse_events: 0;
      description {
        state: "default" 0.0;
	rel1 {
	  to: "main_frame";
	  relative: 0.5 0.0;
	  offset: -47 0;
	}
	rel2 {
	  to: "main_frame";
	  relative: 0.5 0.0;
	  offset: 47 96;
	}
	image {
	  normal: "amsn.png";
	}
      }
      description {
        state: "connecting" 0.0;
        inherit: "default" 0.0;
        visible: 0.0;
      }
    }
#include "logo_anim_part.edc"
    part {
      name: "connection_status";
      type: TEXT;
      mouse_events: 0;
      description {
        state: "default" 0.0;
        visible: 0;
	rel1 {
	  to_y: "logo_cube";
	  relative: 0.0 1.0;
	  offset: 0 10;
	}
	rel2 {
	  to_y: "logo_cube";
	  relative: 1.0 1.0;
	  offset: 0 30;
	}
        color: 0 0 0 255;
        color2: 225 225 225 128;
	text {
	  align: 0.5 0.5;
	  font: "VeraBd";
	  size: 10;
	  text: "Connecting";
	  min: 0 0;
	  elipsis: 0.0;
	}

      }
      description {
        state: "connecting" 0.0;
        inherit: "default" 0.0;
        visible: 1;
      } 
    } 
    part {
      name: "connection_status2";
      type: TEXT;
      mouse_events: 0;
      description {
        state: "default" 0.0;
        visible: 0;
	rel1 {
	  to_y: "logo_cube";
	  relative: 0.0 1.0;
	  offset: 0 30;
	}
	rel2 {
	  to_y: "logo_cube";
	  relative: 1.0 1.0;
	  offset: 0 50;
	}
        color: 0 0 0 255;
        color2: 225 225 225 128;
	text {
	  align: 0.5 0.5;
	  font: "VeraBd";
	  size: 10;
	  text: "";
	  min: 0 0;
	  elipsis: 0.0;
	}

      }
      description {
        state: "connecting" 0.0;
        inherit: "default" 0.0;
        visible: 1;
      } 
    }
#define CREATE_FIELD(NAME, OFFSET, LABEL, IMAGE_FILE, TEXT_VALUE)      \
    part { 	                                                       \
      name: NAME"_label";                                              \
      type: TEXT;                                                      \
      description {                                                    \
        state: "default" 0.0;                                          \
        min: 50 20;                                                    \
        max: 500 20;                                                   \
	rel1 {                                                         \
	  to: "main_frame";                                            \
	  relative: 0.2 0.0;                                           \
	  offset: 0 OFFSET;                                            \
	}                                                              \
	rel2 {                                                         \
	  to: "main_frame";                                            \
	  relative: 0.8 0.0;                                           \
	  offset: 0 (OFFSET+20);                                       \
	}                                                              \
        color: 0 0 0 255;                                              \
        color2: 225 225 225 128;                                       \
	text {                                                         \
	  align: 0.0 0.5;                                              \
	  font: "VeraBd";                                              \
	  size: 10;                                                    \
	  text: LABEL" :";                                             \
	  min: 0 0;                                                    \
	  elipsis: 0.0;                                                \
	}                                                              \
      }								       \
      description {						       \
        state: "connecting" 0.0;				       \
        inherit: "default" 0.0;					       \
        visible: 0;						       \
      }                                                                \
    }                                                                  \
    part {                                                             \
      name: NAME"_bg";                                                 \
      type: IMAGE;                                                     \
      description {                                                    \
        state: "default" 0.0;                                          \
        min: 50 20;                                                    \
        max: 500 20;                                                   \
	rel1 {                                                         \
	  to: NAME"_label";                                            \
	  relative: 0.0 1.0;                                           \
	  offset: 0 0;                                                 \
	}                                                              \
	rel2 {                                                         \
	  to: NAME"_label";                                            \
	  relative: 1.0 1.0;                                           \
	  offset: 0 20;                                                \
	}                                                              \
	image {                                                        \
	  normal: IMAGE_FILE;					       \
	  border: 2 20 2 2;					       \
	}							       \
      }								       \
      description {						       \
        state: "connecting" 0.0;				       \
        inherit: "default" 0.0;					       \
        visible: 0;						       \
      }								       \
    }                                                                  \
    part {                                                             \
      name: NAME;                                                      \
      type: TEXT;                                                      \
      description {                                                    \
        state: "default" 0.0;                                          \
	rel1 {                                                         \
	  to: NAME"_bg";                                               \
	  relative: 0.0 0.0;                                           \
	  offset: 5 0;                                                 \
	}                                                              \
	rel2 {                                                         \
	  to: NAME"_bg";                                               \
	  relative: 1.0 1.0;                                           \
	  offset: 0 0;                                                 \
	}                                                              \
        color: 0 0 0 255;                                              \
        color2: 225 225 225 128;                                       \
	text {                                                         \
	  align: 0.0 0.5;                                              \
	  font: "VeraBd";                                              \
	  size: 10;                                                    \
	  text: TEXT_VALUE;                                            \
	  min: 0 0;                                                    \
	  elipsis: 0.0;                                                \
	}                                                              \
      }								       \
      description {						       \
        state: "connecting" 0.0;				       \
        inherit: "default" 0.0;					       \
        visible: 0;						       \
      }								       \
    }
    CREATE_FIELD("user_name", 100, "Username", "combobox.png", "")
    CREATE_FIELD("password", 150, "Password", "entry.png", "")
    CREATE_FIELD("initial_status", 200, "Sign-in status", "combobox.png", "Online")

    part {
      name: "arrow";
      type: IMAGE;
      mouse_events: 0;
      description {
        state: "default" 0.0;
	rel1 {
  	  to: "main_frame";
  	  relative: 0.2 0.0;
	  offset: -30 120;
	}
	rel2 {
	  to: "main_frame";
          relative: 0.2 0.0;
	  offset: -0 140;
	}
	image {
  	  normal: "arrow.png";
	}
      }
      description {
        state: "left" 0.0;
        inherit: "default" 0.0;
	rel1 {
  	  to: "main_frame";
  	  relative: 0.2 0.0;
	  offset: -50 120;
	}
	rel2 {
	  to: "main_frame";
          relative: 0.2 0.0;
	  offset: -20 140;
	}
	
      }
      description {
        state: "connecting" 0.0;
        inherit: "default" 0.0;
        visible: 0;
      }
    }

    part {
      name: "login_button";
      type: IMAGE;
      description {
        state: "default" 0.0;
	rel1 {
	  to: "main_frame";
	  relative: 0.5 0.0;
	  offset: -40 250;
	}
	rel2 {
	  to: "main_frame";
	  relative: 0.5 0.0;
	  offset: 40 280;
	}
	image {
	  normal: "button.png";
	  border: 6 6 6 6;
	}
      } 
      description {
        state: "hovered" 0.0;
        inherit: "default" 0.0;
	image {
	  normal: "button_hover.png";
	  border: 6 6 6 6;
	}
      }
      description {
        state: "connecting" 0.0;
        inherit: "default" 0.0;
        visible: 0;
      }
    }
    part {
      name: "login_button_label";
      type: TEXT;
      description {
        state: "default" 0.0;
	rel1 {
	  to: "login_button";
	  relative: 0.0 0.0;
	  offset: 3 3;
	}
	rel2 {
	  to: "login_button";
	  relative: 1.0 1.0;
	  offset: -3 -3;
	}
        color: 0 0 0 255;
        color2: 225 225 225 128;
	text {
	  align: 0.5 0.5;
	  font: "VeraBd";
	  size: 10;
	  text: "Sign In";
	  min: 0 0;
	  elipsis: 0.0;
	}

      }
      description {
        state: "connecting" 0.0;
        inherit: "default" 0.0;
        visible: 0;
      }
    }      
    part {
      name: "more_button";
      type: TEXT;
      description {
        state: "default" 0.0;
	rel1 {
	  to: "main_frame";
	  relative: 0.8 0.0;
	  offset: -40 300;
	}
	rel2 {
	  to: "main_frame";
	  relative: 0.8 0.0;
	  offset: 0 320;
	}
        color: 10 50 100 255 ;
	text {
	  align: 0.5 0.5;
	  font: "VeraBd";
	  size: 10;
	  text: "More";
	  min: 0 0;
	  elipsis: 0.0;
	}
      } 
      description {
        state: "connecting" 0.0;
        inherit: "default" 0.0;
        visible: 0;
      }
    }
  }
  programs {
    program {
      name: "signin";
      signal: "mouse,clicked,1";
      source: "login_button*";
      action: SIGNAL_EMIT "signin" "";
    }
    program {
      name: "hover_login_button";
      signal: "mouse,in";
      source: "login_button*";
      script {
	if (get_int(remove_button) == 1) {
	  set_state(PART:"login_button", "connecting", 0.0);
	} else {
	  set_state(PART:"login_button", "hovered", 0.0);
	}
      }
    }
    program {
      name: "unhover_login_button";
      signal: "mouse,out";
      source: "login_button*";
      script {
	if (get_int(remove_button) == 1) {
	  set_state(PART:"login_button", "connecting", 0.0);
	} else {
	  set_state(PART:"login_button", "default", 0.0);
	}
      }
    }
    program {
      name: "arrow_animate";
      signal: "load";
      script {
	set_int(animate_arrow, 1);
      }
      after: "arrow_left";
    }
    program {
      name: "arrow_unanimate";
      script {
	set_int(animate_arrow, 0);
      }
    }
    program {
      name: "arrow_left";
      action: STATE_SET "left" 0.0;
      target: "arrow";
      transition: LINEAR 0.3;
      after: "arrow_try_right";
    }
    program {
      name: "arrow_try_right";
      script {
	if (get_int(animate_arrow) == 1)
	  run_program(PROGRAM:"arrow_right");
      }
    }
    program {
      name: "arrow_right";
      action: STATE_SET "default" 0.0;
      target: "arrow";
      transition: LINEAR 0.3;
      after: "arrow_left";
    }
    program {
      name: "connecting";
      signal: "connecting";
      script {
	run_program(PROGRAM:"arrow_unanimate");
	set_int(remove_button, 1);
      }
      after : "remove_all";
    }
    program {
      name: "remove_all";
      action: STATE_SET "connecting" 0.0;
      target: "language_frame";
      target: "language_button";
      target: "language_spacer";
      target: "language_text";
      target: "main_frame";
      target: "dp_frame";
      target: "user_name";
      target: "user_name_bg";
      target: "user_name_label";
      target: "password";
      target: "password_bg";
      target: "password_label";
      target: "initial_status";
      target: "initial_status_bg";
      target: "initial_status_label";
      target: "arrow";
      target: "login_button";
      target: "login_button_label";
      target: "more_button";
      target: "connection_status";
      target: "connection_status2";
      transition: LINEAR 0.0;
      after: "check_cube_anim_start";
    }
    program {
      name: "check_cube_anim_start";
      script {
	if (get_int(cube_animated) == 0) {
	  run_program(PROGRAM:"cube_anim_start");
	}
	set_int(cube_animated, 1);
      }
    }
#include "logo_anim_programs.edc"
  }
}
